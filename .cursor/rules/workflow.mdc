---
description: 
globs: 
alwaysApply: true
---
# 喵呜记账开发工作流

## 基本原则

- 优先使用MCP工具进行开发
- 大改动后自动提交Git
- 使用绝对路径操作文件
- 可以直接修改文件，无需额外解释

## 开发流程

### 1. 初始设置

```typescript
// 克隆仓库
await mcp.runCommand('git clone https://gitee.com/await29/meow-accounting.git .');

// 安装依赖
await mcp.runCommand('cd /home/await/project/meow-accounting/frontend && pnpm install');
await mcp.runCommand('cd /home/await/project/meow-accounting/backend && pnpm install');
```

### 2. 功能开发

```typescript
// 创建功能分支
await mcp.runCommand('git checkout -b feat/new-feature');

// 编辑文件
await mcp.editFile('/home/await/project/meow-accounting/frontend/src/components/NewFeature.tsx', newComponentContent);

// 添加新文件
await mcp.writeFile('/home/await/project/meow-accounting/frontend/src/hooks/useNewFeature.ts', newHookContent);

// 自动提交
await mcp.gitCommit('feat: 添加新功能组件和Hook');
```

### 3. 浏览器测试

```typescript
// 启动开发服务器
const server = await mcp.startDevServer({
  cwd: '/home/await/project/meow-accounting/frontend',
  command: 'pnpm dev'
});

// 启动浏览器测试
const browser = await mcp.launchBrowser();
const page = await browser.newPage();
await page.goto('http://localhost:3000/new-feature');

// 测试功能操作
await page.click('#feature-button');
await page.waitForSelector('.success-message');

// 截图记录
await page.screenshot({ path: './screenshots/new-feature.png' });

// 清理资源
await browser.close();
await server.kill();
```

### 4. 代码审查

```typescript
// 运行测试
await mcp.runCommand('cd /home/await/project/meow-accounting/frontend && pnpm test');

// 运行代码检查
await mcp.runCommand('cd /home/await/project/meow-accounting/frontend && pnpm lint');

// 修复代码风格问题
await mcp.runCommand('cd /home/await/project/meow-accounting/frontend && pnpm lint:fix');

// 提交修复
await mcp.gitCommit('style: 修复代码风格问题');
```

### 5. 合并请求

```typescript
// 推送到远程仓库
await mcp.runCommand('git push origin feat/new-feature');

// 创建合并请求
await mcp.createPullRequest({
  title: 'feat: 添加新功能',
  description: '实现了XX新功能，包括前端组件和相关Hook',
  base: 'main',
  head: 'feat/new-feature'
});
```

## 批量更新工作流

处理批量文件更新时，使用MCP的批量操作功能：

```typescript
// 批量更新文件并自动提交
await mcp.batchEditAndCommit({
  files: [
    {
      path: '/home/await/project/meow-accounting/frontend/src/components/Header.tsx',
      content: updatedHeaderContent
    },
    {
      path: '/home/await/project/meow-accounting/frontend/src/components/Footer.tsx',
      content: updatedFooterContent
    },
    {
      path: '/home/await/project/meow-accounting/frontend/src/styles/layout.css',
      content: updatedStyleContent
    }
  ],
  commitMessage: 'feat: 更新全局布局组件'
});
```

## 自动化部署

```typescript
// 构建项目
await mcp.runCommand('cd /home/await/project/meow-accounting/frontend && pnpm build');

// 执行部署脚本
await mcp.runCommand('./deploy.sh');

// 验证部署
const browser = await mcp.launchBrowser();
const page = await browser.newPage();
await page.goto('https://production-url.com');
const isDeployed = await page.isVisible('#app-version');
await browser.close();

// 标记发布
if (isDeployed) {
  await mcp.gitTag('v1.0.0');
  await mcp.gitPush('--tags');
}
```
